// <auto-generated />
using System;
using EfcDataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfcDataAccess.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.Guests.Entities.Guest", b =>
                {
                    b.Property<Guid>("GuestId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("GuestId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.VEAEvents.VeaEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("EndTime");

                    b.Property<Guid>("EventId")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxGuests")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("StartTime");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Visibility")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("VIAEventAssociation.Core.Domain.Aggregates.VEAEvents.VeaEvent", b =>
                {
                    b.OwnsMany("VIAEventAssociation.Core.Domain.Aggregates.Guests.GuestId", "Participants", b1 =>
                        {
                            b1.Property<Guid>("VeaEventId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("TEXT")
                                .HasColumnName("GuestId");

                            b1.Property<Guid>("Value")
                                .HasColumnType("TEXT");

                            b1.HasKey("VeaEventId", "GuestId");

                            b1.HasIndex("GuestId");

                            b1.ToTable("Participants", (string)null);

                            b1.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Guests.Entities.Guest", null)
                                .WithMany()
                                .HasForeignKey("GuestId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("VeaEventId");
                        });

                    b.OwnsMany("VIAEventAssociation.Core.Domain.Aggregates.VEAEvents.Invitation", "_invitations", b1 =>
                        {
                            b1.Property<Guid>("VeaEventId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("GuestId")
                                .HasColumnType("TEXT");

                            b1.HasKey("VeaEventId", "GuestId");

                            b1.HasIndex("GuestId");

                            b1.ToTable("Invitation");

                            b1.HasOne("VIAEventAssociation.Core.Domain.Aggregates.Guests.Entities.Guest", null)
                                .WithMany()
                                .HasForeignKey("GuestId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("VeaEventId");

                            b1.OwnsOne("VIAEventAssociation.Core.Domain.Aggregates.VEAEvents.Values.InvitationStatus", "Status", b2 =>
                                {
                                    b2.Property<Guid>("InvitationVeaEventId")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("InvitationGuestId")
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("TEXT")
                                        .HasColumnName("Status");

                                    b2.HasKey("InvitationVeaEventId", "InvitationGuestId");

                                    b2.ToTable("Invitation");

                                    b2.WithOwner()
                                        .HasForeignKey("InvitationVeaEventId", "InvitationGuestId");
                                });

                            b1.Navigation("Status")
                                .IsRequired();
                        });

                    b.Navigation("Participants");

                    b.Navigation("_invitations");
                });
#pragma warning restore 612, 618
        }
    }
}
